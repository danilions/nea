[{"filePath":"/Users/daniel/lionsofzion-website/src/app/ClientBackground.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/app/ClientErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/app/i18n-provider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/app/i18n.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/app/layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/app/page.tsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'GalacticGlobeApp' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"GalacticGlobeApp"},"fix":{"range":[119,141],"text":""},"desc":"Remove unused variable 'GalacticGlobeApp'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'DigitalLion' is defined but never used.","line":13,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":21,"suggestions":[{"messageId":"removeVar","data":{"varName":"DigitalLion"},"fix":{"range":[662,726],"text":""},"desc":"Remove unused variable 'DigitalLion'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'donateName' is assigned a value but never used.","line":26,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":26,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"donateName"},"fix":{"range":[1314,1324],"text":""},"desc":"Remove unused variable 'donateName'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'setDonateName' is assigned a value but never used.","line":26,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":26,"endColumn":35,"suggestions":[{"messageId":"removeVar","data":{"varName":"setDonateName"},"fix":{"range":[1324,1339],"text":""},"desc":"Remove unused variable 'setDonateName'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'donateEmail' is assigned a value but never used.","line":27,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":27,"endColumn":21,"suggestions":[{"messageId":"removeVar","data":{"varName":"donateEmail"},"fix":{"range":[1372,1383],"text":""},"desc":"Remove unused variable 'donateEmail'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'setDonateEmail' is assigned a value but never used.","line":27,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":27,"endColumn":37,"suggestions":[{"messageId":"removeVar","data":{"varName":"setDonateEmail"},"fix":{"range":[1383,1399],"text":""},"desc":"Remove unused variable 'setDonateEmail'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'donateAmount' is assigned a value but never used.","line":28,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":28,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"donateAmount"},"fix":{"range":[1432,1444],"text":""},"desc":"Remove unused variable 'donateAmount'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'setDonateAmount' is assigned a value but never used.","line":28,"column":24,"nodeType":"Identifier","messageId":"unusedVar","endLine":28,"endColumn":39,"suggestions":[{"messageId":"removeVar","data":{"varName":"setDonateAmount"},"fix":{"range":[1444,1461],"text":""},"desc":"Remove unused variable 'setDonateAmount'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'donateCustomAmount' is assigned a value but never used.","line":29,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":29,"endColumn":28,"suggestions":[{"messageId":"removeVar","data":{"varName":"donateCustomAmount"},"fix":{"range":[1497,1515],"text":""},"desc":"Remove unused variable 'donateCustomAmount'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'setDonateCustomAmount' is assigned a value but never used.","line":29,"column":30,"nodeType":"Identifier","messageId":"unusedVar","endLine":29,"endColumn":51,"suggestions":[{"messageId":"removeVar","data":{"varName":"setDonateCustomAmount"},"fix":{"range":[1515,1538],"text":""},"desc":"Remove unused variable 'setDonateCustomAmount'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'donateRecurring' is assigned a value but never used.","line":30,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":30,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"donateRecurring"},"fix":{"range":[1571,1586],"text":""},"desc":"Remove unused variable 'donateRecurring'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'setDonateRecurring' is assigned a value but never used.","line":30,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":30,"endColumn":45,"suggestions":[{"messageId":"removeVar","data":{"varName":"setDonateRecurring"},"fix":{"range":[1586,1606],"text":""},"desc":"Remove unused variable 'setDonateRecurring'."}]}],"suppressedMessages":[],"errorCount":12,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n// ...existing code...\nimport GalacticGlobeApp from \"@/components/globe/GlobeClientLoader\";\nimport HeroSection from \"@/components/sections/HeroSection\";\nimport { FeaturesSection } from \"@/components/sections/FeaturesSection\";\nimport { TrustIndicators } from \"@/components/sections/TrustIndicators\";\nimport { Footer } from \"@/components/sections/Footer\";\nimport { ContactSection } from \"@/components/sections/ContactSection\";\nimport InteractiveWorldMap from \"@/components/sections/InteractiveWorldMap\";\nimport { MetricsDisplay } from \"@/components/sections/MetricsDisplay\";\nimport { DigitalLion } from \"@/components/sections/DigitalLion\";\n// import DonateSection from \"@/components/sections/DonateSection\"; // Not found, comment out\nimport Head from \"next/head\";\n\nexport default function Home() {\n  const { t } = useTranslation();\n  console.log(\"Render: Home (page.tsx)\");\n  const [diagnostic, setDiagnostic] = React.useState(\"\");\n  const [runtime, setRuntime] = React.useState(\"\");\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = React.useState(false);\n  // Add state for AI Detector and Donate forms\n  const [aiInput, setAiInput] = React.useState(\"\");\n  const [aiAdvanced, setAiAdvanced] = React.useState(false);\n  const [donateName, setDonateName] = React.useState(\"\");\n  const [donateEmail, setDonateEmail] = React.useState(\"\");\n  const [donateAmount, setDonateAmount] = React.useState(\"$36\");\n  const [donateCustomAmount, setDonateCustomAmount] = React.useState(\"\");\n  const [donateRecurring, setDonateRecurring] = React.useState(false);\n\n  React.useEffect(() => {\n    setDiagnostic(`DIAGNOSTIC: ${new Date().toISOString()}`);\n    setRuntime(`RUNTIME: ${new Date().toISOString()}`);\n  }, []);\n\n  // Smooth scrolling for anchor links\n  const handleSmoothScroll = (e: React.MouseEvent<HTMLAnchorElement>, id: string) => {\n    e.preventDefault();\n    document.querySelector(id)?.scrollIntoView({ behavior: \"smooth\" });\n    setIsMobileMenuOpen(false);\n  };\n\n  return (\n    <div className=\"text-gray-800\">\n      <Head>\n        <title>{t(\"title\")}</title>\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <link\n          rel=\"stylesheet\"\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\"\n        />\n      </Head>\n      <div\n        id=\"diagnostic-marker\"\n        className=\"text-center text-[#c00] font-bold my-2\"\n      >\n        {diagnostic}\n      </div>\n\n      {/* Navigation */}\n      <nav className=\"bg-[#0a1128] border-b border-[#1a2a6c] sticky top-0 z-50\">\n        <div className=\"container mx-auto px-4 py-3 flex justify-between items-center\">\n          <div className=\"flex items-center space-x-3\">\n            <img\n              src=\"/images/logo.png\"\n              alt=\"Lions of Zion Logo\"\n              className=\"h-10 w-10\"\n            />\n            <span className=\"text-xl font-bold text-[#00f5d4]\">\n              {t(\"nav.logo\")}\n            </span>\n          </div>\n          <div\n            className={`${\n              isMobileMenuOpen ? \"flex flex-col absolute top-16 left-0 w-full bg-white p-4 shadow-md\" : \"hidden\"\n            } md:flex md:flex-row md:space-x-8 md:static md:bg-transparent md:p-0 md:shadow-none`}\n          >\n            <a\n              href=\"#mission\"\n              className=\"nav-link text-blue-900 hover:text-blue-700 py-2\"\n              onClick={(e) => handleSmoothScroll(e, \"#mission\")}\n            >\n              {t(\"nav.mission\")}\n            </a>\n            <a\n              href=\"#modules\"\n              className=\"nav-link text-blue-900 hover:text-blue-700 py-2\"\n              onClick={(e) => handleSmoothScroll(e, \"#modules\")}\n            >\n              {t(\"nav.modules\")}\n            </a>\n            <a\n              href=\"#map\"\n              className=\"nav-link text-blue-900 hover:text-blue-700 py-2\"\n              onClick={(e) => handleSmoothScroll(e, \"#map\")}\n            >\n              {t(\"nav.worldMap\")}\n            </a>\n            <a\n              href=\"#feed\"\n              className=\"nav-link text-blue-900 hover:text-blue-700 py-2\"\n              onClick={(e) => handleSmoothScroll(e, \"#feed\")}\n            >\n              {t(\"nav.liveFeed\")}\n            </a>\n            <a\n              href=\"#join\"\n              className=\"nav-link text-blue-900 hover:text-blue-700 py-2\"\n              onClick={(e) => handleSmoothScroll(e, \"#join\")}\n            >\n              {t(\"nav.joinUs\")}\n            </a>\n          </div>\n          <button\n            className=\"md:hidden text-blue-900\"\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n          >\n            <i className=\"fas fa-bars text-2xl\"></i>\n          </button>\n        </div>\n      </nav>\n\n      {/* Hero Section */}\n      <HeroSection />\n\n      <div\n        id=\"render-verify\"\n        className=\"text-center text-[#0a0] font-bold my-2\"\n      >\n        {runtime}\n      </div>\n\n      {/* Mission Section */}\n      <FeaturesSection />\n\n      {/* Modules Section */}\n      <TrustIndicators />\n\n      {/* World Map Section */}\n      <InteractiveWorldMap />\n\n      {/* Live Feed Section */}\n      <MetricsDisplay label=\"Active Users\" value=\"123\" trend=\"+5\" type=\"info\" />\n\n      {/* AI Detector Section */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"bg-blue-50 rounded-xl p-8 md:p-12 shadow-sm max-w-4xl mx-auto\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-3xl font-bold text-blue-900 mb-4\">\n                {t(\"aiDetector.title\")}\n              </h2>\n              <div className=\"w-24 h-1 bg-yellow-600 mx-auto mb-6\"></div>\n              <p className=\"text-lg text-gray-700 max-w-2xl mx-auto\">\n                {t(\"aiDetector.description\")}\n              </p>\n            </div>\n            <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n              <div className=\"flex border-b border-gray-200 mb-4\">\n                <button className=\"py-2 px-4 font-medium text-blue-900 border-b-2 border-blue-900\">\n                  {t(\"aiDetector.textAnalysis\")}\n                </button>\n                <button className=\"py-2 px-4 font-medium text-gray-500 hover:text-blue-900\">\n                  {t(\"aiDetector.urlAnalysis\")}\n                </button>\n                <button className=\"py-2 px-4 font-medium text-gray-500 hover:text-blue-900\">\n                  {t(\"aiDetector.imageAnalysis\")}\n                </button>\n              </div>\n              <textarea\n                className=\"w-full h-40 p-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-900 focus:border-blue-900\"\n                placeholder={t(\"aiDetector.placeholder\")}\n                value={aiInput}\n                onChange={(e) => setAiInput(e.target.value)}\n              ></textarea>\n              <div className=\"flex justify-between items-center mt-4\">\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"advanced\"\n                    className=\"w-4 h-4 text-blue-900 rounded focus:ring-blue-900\"\n                    checked={aiAdvanced}\n                    onChange={() => setAiAdvanced(!aiAdvanced)}\n                  />\n                  <label htmlFor=\"advanced\" className=\"ml-2 text-sm text-gray-700\">\n                    {t(\"aiDetector.advancedAnalysis\")}\n                  </label>\n                </div>\n                <button\n                  className=\"bg-blue-900 hover:bg-blue-800 text-white font-bold py-2 px-6 rounded-full transition duration-300 flex items-center\"\n                  onClick={() => {/* TODO: Add API call for analysis */}}\n                >\n                  {t(\"aiDetector.analyze\")}\n                  <i className=\"fas fa-search ml-2\"></i>\n                </button>\n              </div>\n            </div>\n            <div className=\"grid md:grid-cols-3 gap-4 text-center\">\n              {[\n                { icon: \"database\", title: \"sources\", description: \"sourcesDescription\" },\n                { icon: \"bolt\", title: \"realTimeAnalysis\", description: \"realTimeAnalysisDescription\" },\n                { icon: \"chess-knight\", title: \"strategicResponse\", description: \"strategicResponseDescription\" },\n              ].map((item) => (\n                <div key={item.title} className=\"bg-white p-4 rounded-lg shadow-sm\">\n                  <div className=\"text-blue-900 mb-2\">\n                    <i className={`fas fa-${item.icon} text-2xl`}></i>\n                  </div>\n                  <h4 className=\"font-bold text-blue-900 mb-1\">\n                    {t(`aiDetector.${item.title}`)}\n                  </h4>\n                  <p className=\"text-sm text-gray-700\">\n                    {t(`aiDetector.${item.description}`)}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Join Section */}\n      <ContactSection />\n\n      {/* Donate Section (temporarily removed, missing file) */}\n      {/* <DonateSection /> */}\n\n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n}","usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/Header.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/Header.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/WorldNetworkMap.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/actor/ActorModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/globe/AirportMarkers.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-unused-vars","severity":2,"message":"'airport' is defined but never used.","line":23,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":23,"endColumn":30,"suggestions":[{"messageId":"removeVar","data":{"varName":"airport"},"fix":{"range":[527,543],"text":""},"desc":"Remove unused variable 'airport'."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-unused-vars","severity":2,"message":"'airport' is defined but never used.","line":112,"column":21,"nodeType":"Identifier","messageId":"unusedVar","endLine":112,"endColumn":37,"suggestions":[{"messageId":"removeVar","data":{"varName":"airport"},"fix":{"range":[3938,3954],"text":""},"desc":"Remove unused variable 'airport'."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/globe/EarthModel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/globe/FlightPaths.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/globe/GalacticGlobeApp.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/globe/GalacticGlobeApp.tsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'airport' is defined but never used.","line":106,"column":44,"nodeType":"Identifier","messageId":"unusedVar","endLine":106,"endColumn":60,"suggestions":[{"messageId":"removeVar","data":{"varName":"airport"},"fix":{"range":[2740,2756],"text":""},"desc":"Remove unused variable 'airport'."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useCallback, Suspense } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { EarthModel } from './EarthModel';\nimport AirportMarkers from './AirportMarkers';\nimport FlightPaths from './FlightPaths';\nimport StarsBackground from './StarsBackground';\n\n// --- Types ---\ninterface Airport {\n  iata: string;\n  city: string;\n  country: string;\n  lat: number;\n  lng: number;\n  timezone: string;\n  description?: string;\n}\n\ninterface Route {\n  source: string;\n  target: string;\n  airline: string;\n  flight_number: string;\n  duration: string;\n  distance_km: number;\n  status: string;\n}\n\ninterface FlightRoute {\n  start: THREE.Vector3;\n  end: THREE.Vector3;\n  routeInfo: Route;\n  index: number;\n}\n\n// --- Mock Data ---\nconst MOCK_AIRPORTS: Airport[] = [\n  {\n    iata: 'TLV',\n    city: 'Tel Aviv',\n    country: 'Israel',\n    lat: 32.0114,\n    lng: 34.8867,\n    timezone: 'Asia/Jerusalem',\n    description: 'Ben Gurion Airport',\n  },\n  {\n    iata: 'JFK',\n    city: 'New York',\n    country: 'USA',\n    lat: 40.6413,\n    lng: -73.7781,\n    timezone: 'America/New_York',\n    description: 'John F. Kennedy International Airport',\n  },\n];\n\nconst MOCK_ROUTES: Route[] = [\n  {\n    source: 'TLV',\n    target: 'JFK',\n    airline: 'El Al',\n    flight_number: 'LY001',\n    duration: '11h',\n    distance_km: 9100,\n    status: 'active',\n  },\n];\n\nfunction computeFlightRoutes(airports: Airport[], routes: Route[], earthRadius: number): FlightRoute[] {\n  return routes.map((route, idx) => {\n    const source = airports.find(a => a.iata === route.source);\n    const target = airports.find(a => a.iata === route.target);\n    if (!source || !target) return null;\n    const phiStart = (90 - source.lat) * (Math.PI / 180);\n    const thetaStart = (source.lng + 180) * (Math.PI / 180);\n    const phiEnd = (90 - target.lat) * (Math.PI / 180);\n    const thetaEnd = (target.lng + 180) * (Math.PI / 180);\n    const start = new THREE.Vector3(\n      -earthRadius * Math.sin(phiStart) * Math.cos(thetaStart),\n      earthRadius * Math.cos(phiStart),\n      earthRadius * Math.sin(phiStart) * Math.sin(thetaStart)\n    );\n    const end = new THREE.Vector3(\n      -earthRadius * Math.sin(phiEnd) * Math.cos(thetaEnd),\n      earthRadius * Math.cos(phiEnd),\n      earthRadius * Math.sin(phiEnd) * Math.sin(thetaEnd)\n    );\n    return {\n      start,\n      end,\n      routeInfo: route,\n      index: idx,\n    };\n  }).filter(Boolean) as FlightRoute[];\n}\n\nconst GalacticGlobeApp: React.FC = () => {\n  // ...existing code...\n  const earthRadius = 2;\n  const airports = MOCK_AIRPORTS;\n  const routes = MOCK_ROUTES;\n  const flightRoutes = computeFlightRoutes(airports, routes, earthRadius);\n\n  const handleSelectAirport = useCallback((airport: Airport) => {\n    // Add any additional logic for airport selection here\n  }, []);\n\n  return (\n    <Canvas style={{ height: 600, width: '100%' }}>\n      <Suspense fallback={null}>\n        <EarthModel />\n        <AirportMarkers airports={airports} radius={earthRadius} onSelectAirport={handleSelectAirport} />\n        <FlightPaths flightRoutes={flightRoutes} />\n        <StarsBackground numStars={100} />\n      </Suspense>\n    </Canvas>\n  );\n};\n\nexport default GalacticGlobeApp;","usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/globe/GlobeClientLoader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/globe/GlobeNav.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/globe/GlobeNav.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/globe/StarsBackground.tsx","messages":[{"ruleId":"react/no-unknown-property","severity":2,"message":"Unknown property 'object' found","line":36,"column":16,"nodeType":"JSXAttribute","messageId":"unknownProp","endLine":36,"endColumn":33}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useRef, useMemo } from 'react';\nimport * as THREE from 'three';\n\ninterface StarsBackgroundProps {\n  numStars?: number;\n  radius?: number;\n  starSize?: number;\n  opacity?: number;\n}\n\nconst StarsBackground = React.memo(({ numStars = 10000, radius = 150, starSize = 0.15, opacity = 0.9 }: StarsBackgroundProps) => {\n  const positions = useRef<Float32Array | null>(null);\n\n  if (!positions.current) {\n    const p = new Float32Array(numStars * 3);\n    for (let i = 0; i < numStars; i++) {\n      const phi = Math.random() * Math.PI * 2;\n      const theta = Math.random() * Math.PI;\n      const x = radius * Math.sin(theta) * Math.cos(phi);\n      const y = radius * Math.sin(theta) * Math.sin(phi);\n      const z = radius * Math.cos(theta);\n      p[i * 3] = x;\n      p[i * 3 + 1] = y;\n      p[i * 3 + 2] = z;\n    }\n    positions.current = p;\n  }\n\n  const geometry = useMemo(() => {\n    const geom = new THREE.BufferGeometry();\n    geom.setAttribute('position', new THREE.BufferAttribute(positions.current!, 3));\n    return geom;\n  }, []);\n\n  return (\n    <primitive object={geometry}>\n      <pointsMaterial color=\"#FFFFFF\" size={starSize} opacity={opacity} />\n    </primitive>\n  );\n});\nStarsBackground.displayName = 'StarsBackground';\n\nexport default StarsBackground;\n","usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/graph/NetworkGraph.tsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'Timeout' is defined but never used.","line":6,"column":15,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"Timeout"},"fix":{"range":[309,352],"text":""},"desc":"Remove unused variable 'Timeout'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'node' is defined but never used.","line":12,"column":18,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":30,"suggestions":[{"messageId":"removeVar","data":{"varName":"node"},"fix":{"range":[472,484],"text":""},"desc":"Remove unused variable 'node'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'isMounted' is assigned a value but never used.","line":50,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":50,"endColumn":18}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useRef, useState, useCallback } from 'react';\n// SigmaRenderer and Graph will be dynamically imported client-side\nimport { fetchGraphDataAsync } from '../../lib/graph/service';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useTranslation } from 'react-i18next';\nimport type { Timeout } from 'node:timers';\n\nexport interface NetworkGraphProps {\n  title?: string;\n  description?: string;\n  initialGraph?: any;\n  onNodeClick?: (node: string) => void;\n}\n\nexport default function NetworkGraph({ title, description, initialGraph, onNodeClick }: NetworkGraphProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [graph, setGraph] = useState<any>(initialGraph || null);\n  const [message, setMessage] = useState<string | null>(null);\n  const messageTimeoutRef = useRef<any>(null);\n  const { t } = useTranslation();\n\n  // Show user message\n  const showMessage = useCallback((msg: string, duration = 3000) => {\n    setMessage(msg);\n    if (messageTimeoutRef.current) clearTimeout(messageTimeoutRef.current);\n    messageTimeoutRef.current = setTimeout(() => setMessage(null), duration);\n  }, []);\n\n  // Fetch graph if not provided\n  useEffect(() => {\n    let mounted = true;\n    async function fetchGraph() {\n      if (!graph) {\n        const Graphology = (await import('graphology')).default;\n        fetchGraphDataAsync().then((data) => {\n      if (mounted) setGraph(data instanceof Graphology ? data : new Graphology());\n        });\n      }\n    }\n    fetchGraph();\n    return () => {\n      mounted = false;\n      if (messageTimeoutRef.current) clearTimeout(messageTimeoutRef.current);\n    };\n  }, [graph]);\n\n  // Mount Sigma renderer (client-side only)\n  useEffect(() => {\n    let renderer: any = null;\n    let isMounted = true;\n    async function mountSigma() {\n      if (typeof window === 'undefined' || !containerRef.current || !graph) return;\n      const SigmaRenderer = (await import('sigma')).default;\n      containerRef.current.innerHTML = '';\n      renderer = new SigmaRenderer(graph, containerRef.current, {\n        renderLabels: true,\n        labelColor: { color: '#BBBBBB' },\n        defaultNodeColor: '#00FFFF',\n        defaultEdgeColor: '#00FF00',\n      });\n      type ClickNodeEvent = { node: string };\n      renderer.on('clickNode', (event: ClickNodeEvent) => {\n        const { node } = event;\n                showMessage(t('graph.nodeClicked', { node }));\n        if (onNodeClick) onNodeClick(node);\n      });\n      renderer.on('doubleClickNode', (event: ClickNodeEvent) => {\n        const { node } = event;\n        showMessage(t('graph.nodeDoubleClicked', { node }));\n      });\n      renderer.refresh();\n    }\n    mountSigma();\n    return () => {\n      isMounted = false;\n      if (renderer) renderer.kill();\n    };\n  }, [containerRef, graph, showMessage, t, onNodeClick]);\n\n  return (\n    <div className=\"relative w-full h-96 md:h-[500px] bg-gray-900 rounded-lg shadow-lg border border-gray-700 overflow-hidden\">\n      {/* Graph container */}\n      <div\n        ref={containerRef}\n        className=\"w-full h-full\"\n        role=\"region\"\n        aria-label={description || title || \"Network Graph Visualization\"}\n        tabIndex={0}\n      ></div>\n\n      {/* Title for accessibility and clarity */}\n      {title && (\n        <h3 className=\"absolute top-4 left-4 text-xl font-bold text-blue-400 z-10\" id=\"network-graph-title\">\n          {title}\n        </h3>\n      )}\n\n      {/* User message display */}\n      <AnimatePresence>\n        {message && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 20 }}\n            className=\"absolute bottom-4 left-1/2 -translate-x-1/2 bg-blue-800 text-white text-sm px-4 py-2 rounded-full shadow-lg z-20\"\n            role=\"status\"\n            aria-live=\"polite\"\n          >\n            {message}\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/sections/ContactSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/sections/DigitalLion.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/sections/FeaturesSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/sections/Footer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/sections/HeroSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/sections/InteractiveWorldMap.tsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'geo' is defined but never used.","line":23,"column":21,"nodeType":"Identifier","messageId":"unusedVar","endLine":23,"endColumn":40,"suggestions":[{"messageId":"removeVar","data":{"varName":"geo"},"fix":{"range":[539,558],"text":""},"desc":"Remove unused variable 'geo'."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useMemo, useCallback } from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography\n} from \"react-simple-maps\";\n// Note: Sphere and Graticule are not available in this version of react-simple-maps\nimport { worldMapData } from \"@/lib/map/worldMapData\";\n\ninterface CountryFeature {\n  rsmKey: string;\n  type: string;\n  properties: {\n    NAME: string;\n    ISO_A3: string;\n    CONTINENT: string;\n  };\n  geometry: unknown;\n}\n\ninterface InteractiveWorldMapProps {\n  selectedCountryId?: string;\n  onCountryClick?: (geo: CountryFeature) => void;\n  className?: string;\n}\n\nconst InteractiveWorldMap: React.FC<InteractiveWorldMapProps> = ({\n  selectedCountryId,\n  onCountryClick,\n  className = \"\"\n}) => {\n  const [hoveredCountry, setHoveredCountry] = useState<string | null>(null);\n\n  // Memoize the map projection configuration\n  const mapConfig = useMemo(() => ({\n    projection: \"geoEqualEarth\" as const,\n    projectionConfig: {\n      scale: 140,\n         center: [0, 0] as [number, number]\n    }\n  }), []);\n\n  // Handle country interactions\n  const handleCountryEnter = useCallback((geo: CountryFeature) => {\n    setHoveredCountry(geo.properties.ISO_A3);\n  }, []);\n\n  const handleCountryLeave = useCallback(() => {\n    setHoveredCountry(null);\n  }, []);\n\n  const handleCountryClick = useCallback((geo: CountryFeature) => {\n    onCountryClick?.(geo);\n  }, [onCountryClick]);\n\n  // Memoize country styling\n  const getCountryStyle = useCallback((geo: CountryFeature) => {\n    const isHovered = hoveredCountry === geo.properties.ISO_A3;\n    const isSelected = selectedCountryId === geo.properties.ISO_A3;\n    \n    return {\n      default: {\n        fill: isSelected ? \"#3b82f6\" : isHovered ? \"#1e40af\" : \"#374151\",\n        stroke: isSelected ? \"#60a5fa\" : isHovered ? \"#3b82f6\" : \"#4b5563\",\n        strokeWidth: isSelected ? 2 : isHovered ? 1.5 : 0.5,\n        outline: \"none\",\n        transition: \"all 0.3s ease-in-out\",\n        cursor: \"pointer\"\n      },\n      hover: {\n        fill: \"#1e40af\",\n        stroke: \"#3b82f6\", \n        strokeWidth: 1.5,\n        outline: \"none\"\n      },\n      pressed: {\n        fill: \"#1e3a8a\",\n        stroke: \"#60a5fa\",\n        strokeWidth: 2,\n        outline: \"none\"\n      }\n    };\n  }, [hoveredCountry, selectedCountryId]);\n\n  return (\n    <div className={`relative w-full h-full bg-slate-900 overflow-hidden ${className}`}>\n      {/* Background gradient */}\n      <div className=\"absolute inset-0 bg-gradient-radial from-slate-800 via-slate-900 to-black\" />\n      \n      {/* Map container */}\n      <div className=\"relative w-full h-full\">\n        <ComposableMap\n          projectionConfig={mapConfig.projectionConfig}\n          projection={mapConfig.projection}\n          width={800}\n          height={400}\n          className=\"w-full h-full\"\n        >\n          {/* Background sphere and grid lines removed due to compatibility issues */}\n          \n          {/* Countries */}\n          <Geographies geography={worldMapData}>\n            {({ geographies }: { geographies: CountryFeature[] }) =>\n              geographies.map((geo: CountryFeature) => {\n                const style = getCountryStyle(geo);\n                const isHovered = hoveredCountry === geo.properties.ISO_A3;\n                \n                return (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    onMouseEnter={() => handleCountryEnter(geo)}\n                    onMouseLeave={handleCountryLeave}\n                    onClick={() => handleCountryClick(geo)}\n                    style={style}\n                    className={`\n                      transition-all duration-300 ease-in-out\n                      ${isHovered ? 'drop-shadow-lg' : ''}\n                    `}\n                  />\n                );\n              })\n            }\n          </Geographies>\n        </ComposableMap>\n      </div>\n\n      {/* Country info overlay */}\n      {hoveredCountry && (\n        <div className=\"absolute top-4 left-4 pointer-events-none\">\n          <div className=\"bg-slate-800/90 backdrop-blur-sm border border-slate-600 rounded-lg px-4 py-3 font-mono text-xs text-slate-200\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-2 h-2 rounded-full bg-blue-400 animate-pulse\" />\n              <span className=\"text-blue-400 font-bold\">\n                {worldMapData.features.find(f => f.properties.ISO_A3 === hoveredCountry)?.properties.NAME}\n              </span>\n            </div>\n            <div className=\"mt-1 text-slate-400\">\n              {worldMapData.features.find(f => f.properties.ISO_A3 === hoveredCountry)?.properties.CONTINENT}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Legend */}\n      <div className=\"absolute bottom-4 right-4 pointer-events-none\">\n        <div className=\"bg-slate-800/90 backdrop-blur-sm border border-slate-600 rounded-lg px-4 py-3 font-mono text-xs text-slate-200\">\n          <div className=\"text-cyan-400 font-bold mb-2\">INTERACTIVE WORLD MAP</div>\n          <div className=\"space-y-1\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-3 h-3 bg-gray-600 border border-gray-500\" />\n              <span>Default</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-3 h-3 bg-blue-700 border border-blue-500\" />\n              <span>Hovered</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-3 h-3 bg-blue-600 border border-blue-400\" />\n              <span>Selected</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats overlay */}\n      <div className=\"absolute top-4 right-4 pointer-events-none\">\n        <div className=\"bg-slate-800/90 backdrop-blur-sm border border-slate-600 rounded-lg px-4 py-3 font-mono text-xs text-slate-200\">\n          <div className=\"text-orange-400 font-bold mb-2\">MAP STATISTICS</div>\n          <div className=\"space-y-1\">\n            <div>COUNTRIES: {worldMapData.features.length}</div>\n            <div>PROJECTION: Equal Earth</div>\n            {selectedCountryId && (\n              <div className=\"border-t border-slate-600 pt-1 mt-2\">\n                <span className=\"text-yellow-400\">SELECTED: {selectedCountryId}</span>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InteractiveWorldMap;\n","usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/sections/MetricsDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/sections/TrustIndicators.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/AppModal.tsx","messages":[{"ruleId":"no-undef","severity":2,"message":"'NodeListOf' is not defined.","line":20,"column":12,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":22}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface AppModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n  title?: string;\n}\n\nconst AppModal = React.memo(({ isOpen, onClose, children, title }: AppModalProps) => {\n  const modalRef = useRef<HTMLDivElement>(null);\n  const prevActiveElement = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    if (isOpen) {\n      prevActiveElement.current = document.activeElement as HTMLElement;\n      const focusableElements = modalRef.current?.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      ) as NodeListOf<HTMLElement> | undefined;\n      const firstElement = focusableElements ? (focusableElements[0] as HTMLElement) : null;\n      if (firstElement) {\n        firstElement.focus();\n      }\n\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (event.key === 'Escape') {\n          onClose();\n        } else if (focusableElements && event.key === 'Tab' && focusableElements.length > 0) {\n          const first = focusableElements[0];\n          const last = focusableElements[focusableElements.length - 1];\n\n          if (event.shiftKey) {\n            if (document.activeElement === first) {\n              last.focus();\n              event.preventDefault();\n            }\n          } else {\n            if (document.activeElement === last) {\n              first.focus();\n              event.preventDefault();\n            }\n          }\n        }\n      };\n      document.addEventListener('keydown', handleKeyDown);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n        if (prevActiveElement.current) {\n          prevActiveElement.current.focus();\n        }\n      };\n    }\n  }, [isOpen, onClose]);\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4\"\n          aria-modal=\"true\"\n          role=\"dialog\"\n        >\n          <motion.div\n            initial={{ y: -50, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            exit={{ y: -50, opacity: 0 }}\n            transition={{ duration: 0.3, ease: \"easeOut\" }}\n            className=\"bg-gray-900 rounded-lg shadow-xl p-6 max-w-md w-full border border-gray-700\"\n            ref={modalRef}\n            role=\"document\"\n          >\n            <div className=\"flex justify-between items-center mb-4 pb-4 border-b border-gray-700\">\n              <h2 className=\"text-xl font-bold text-white\" id=\"modal-title\">{title}</h2>\n              <button\n                onClick={onClose}\n                className=\"text-gray-400 hover:text-white transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 rounded-full p-1\"\n                aria-label=\"Close modal\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            <div className=\"text-gray-300\" aria-labelledby=\"modal-title\">\n              {children}\n            </div>\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n});\nAppModal.displayName = 'AppModal';\n\nexport default AppModal;\n","usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/AppSearchBar.tsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'query' is defined but never used.","line":5,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":27,"suggestions":[{"messageId":"removeVar","data":{"varName":"query"},"fix":{"range":[138,151],"text":""},"desc":"Remove unused variable 'query'."}]},{"ruleId":"no-undef","severity":2,"message":"'query' is not defined.","line":15,"column":17,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":22}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useCallback } from 'react';\nimport { motion } from 'framer-motion';\n\ninterface AppSearchBarProps {\n  onSearch: (query: string) => void;\n  placeholder?: string;\n  ariaLabel?: string;\n}\n\nconst AppSearchBar = React.memo(({ onSearch, placeholder = \"Search...\", ariaLabel = \"Enter search query\" }: AppSearchBarProps) => {\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  const handleSearch = useCallback(() => {\n    onSearch(searchValue);\n  }, [onSearch, query]);\n\n  const handleKeyDown = useCallback((event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  }, [handleSearch]);\n\n  return (\n    <div className=\"relative w-full max-w-sm pointer-events-auto\">\n      <input\n        type=\"text\"\n        placeholder={placeholder}\n        value={searchValue}\n        onChange={(e) => setSearchValue(e.target.value)}\n        onKeyDown={handleKeyDown}\n        className=\"w-full p-3 pl-10 bg-gray-800 text-white rounded-full border border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-200\"\n        aria-label={ariaLabel}\n      />\n      <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\" aria-hidden=\"true\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n        </svg>\n      </div>\n      <motion.button\n        onClick={handleSearch}\n        className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-blue-400 hover:text-blue-200 transition-colors duration-200\"\n        aria-label=\"Perform search\"\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\" aria-hidden=\"true\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 5l7 7-7 7\" />\n        </svg>\n      </motion.button>\n    </div>\n  );\n});\nAppSearchBar.displayName = 'AppSearchBar';\n\nexport default AppSearchBar;\n","usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/Badge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/Button.stories.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/Button.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/Button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/Card.stories.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/Card.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/CardContent.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/CardDescription.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/CardHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/CardTitle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/Input.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/Modal.stories.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/Modal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/SearchBar.stories.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/SearchBar.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-unused-vars","severity":2,"message":"'query' is defined but never used.","line":6,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":27,"suggestions":[{"messageId":"removeVar","data":{"varName":"query"},"fix":{"range":[148,161],"text":""},"desc":"Remove unused variable 'query'."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/Toast.stories.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/Toast.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/Tooltip.stories.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/Tooltip.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/ui/TrustIndicators.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/vault/EvidenceVault.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/watchlist/WatchlistPanel.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/components/watchlist/WatchlistPanel.tsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'id' is defined but never used.","line":14,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"id"},"fix":{"range":[277,287],"text":""},"desc":"Remove unused variable 'id'."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/watchlist/WatchlistPanel.tsx\nimport React from 'react';\nimport Image from 'next/image';\n\nexport interface WatchlistItem {\n  id: string;\n  name: string;\n  type: string;\n  image: string;\n}\n\ninterface WatchlistPanelProps {\n  items: WatchlistItem[];\n  onRemove: (id: string) => void;\n}\n\nexport const WatchlistPanel: React.FC<WatchlistPanelProps> = ({ items, onRemove }) => {\n  return (\n    <div className=\"fixed right-4 bottom-4 w-80 bg-surface shadow-lg rounded-lg p-4 z-40\">\n      <h3 className=\"font-bold text-lg mb-2\">My Watchlist</h3>\n      <ul className=\"space-y-2\">\n        {items.length === 0 && <li className=\"text-muted\">No saved actors.</li>}\n        {items.map((item) => (\n          <li key={item.id} className=\"flex items-center gap-3 bg-background rounded p-2 shadow-sm\">\n            <Image src={item.image} alt={item.name} width={40} height={40} className=\"object-cover rounded\" />\n            {/* Color contrast: Ensure background and text-muted meet accessibility */}\n            <div className=\"flex-1\">\n              <div className=\"font-medium\">{item.name}</div>\n              <div className=\"text-xs text-muted\">{item.type}</div>\n            </div>\n            <button\n              onClick={() => onRemove(item.id)}\n              className=\"text-red-500 hover:text-red-700 text-sm font-bold px-2\"\n              aria-label={`Remove ${item.name}`}\n            >\n              ×\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/lib/auth.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/lib/graph/service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/lib/map/worldMapData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/lib/search/exampleData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/lib/search/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/lib/search/searchService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/lib/utils.ts","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: ',' expected.","line":441,"column":5}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Utility to merge class names (for UI components)\nexport function cn(...classes: (string | undefined | null | false)[]): string {\n  return classes.filter(Boolean).join(' ');\n}\n// ...existing code...\n\n// --- Missing Types and Classes ---\n// טיפוס Topology מינימלי\ntype Topology = unknown;\n\n// מחלקה MongoNotConnectedError מינימלית\nclass MongoNotConnectedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MongoNotConnectedError';\n  }\n}\n\n// טיפוס Abortable מינימלי\ntype Abortable = { signal?: AbortSignal };\n// סימון מפתח דקורציה עבור הצפנה\nconst kDecoratedKeys = Symbol('decryptedKeys');\n// Minimal Document type\n// פונקציה מדמה BSON.deserialize (פשטני, רק עבור דוגמה)\nfunction deserialize(buffer: Buffer): Document {\n  // כאן יש להכניס לוגיקה אמיתית אם צריך, כרגע מחזיר אובייקט ריק\n  return {} as Document;\n}\n// ...existing code...\ntype Document = Record<string, unknown>;\n\n// Minimal ObjectId mock\nclass ObjectId {\n  id: Uint8Array;\n  constructor() {\n    this.id = new Uint8Array(12);\n  }\n}\n\n// Minimal Server and ServerType\ntype Server = {\n  loadBalanced?: boolean;\n  description?: { logicalSessionTimeoutMinutes?: number; type?: string };\n};\nconst ServerType = { Standalone: 'Standalone' };\n\n// Minimal MongoClient, Db, Collection, etc\ntype MongoClient = { topology?: Topology; client?: { topology?: Topology } };\ntype Db = {\n  s: { options?: { retryWrites?: boolean; forceServerObjectId?: boolean } };\n  options?: { forceServerObjectId?: boolean; retryWrites?: boolean };\n};\ntype Collection<T = unknown> = { s: { db: Db; pkFactory: { createPk: () => ObjectId } } };\ntype ClientSession = { client?: { topology?: Topology } };\ntype FindCursor = { client?: { topology?: Topology } };\ntype AbstractCursor = { client?: { topology?: Topology } };\n\n// Minimal ReadConcern and OperationOptions\ntype ReadConcern = unknown;\ntype OperationOptions = { session?: { inTransaction: () => boolean } };\n\n// Missing error classes\nclass MongoRuntimeError extends Error {}\nclass MongoParseError extends Error {}\nclass MongoInvalidArgumentError extends Error {}\nclass MongoAPIError extends Error {}\nclass MongoNetworkTimeoutError extends Error {}\nclass MongoCompatibilityError extends Error {}\n\n// Missing constant\nconst LEGACY_HELLO_COMMAND = 'isMaster';\n\n// Helper for isSuperset\nfunction isSuperset(set: string[], subset: string[]): boolean {\n  return subset.every(elem => set.includes(elem));\n}\nimport * as crypto from 'crypto';\nimport type { SrvRecord } from 'dns';\nimport { type EventEmitter } from 'events';\n// import { promises as fs } from 'fs'; // מבודד את הייבוא כדי שלא ייטען בפרונטנד\nimport * as http from 'http';\nimport { clearTimeout, setTimeout } from 'timers';\nimport * as url from 'url';\nimport { URL } from 'url';\nimport { promisify } from 'util';\n\n// ...existing code...\n\n/**\n * MongoDB Driver style callback\n * @public\n */\nexport type Callback<T = unknown, E = Error> = (error?: E, result?: T) => void;\n\nexport type AnyOptions = Document;\n\nexport const ByteUtils = {\n  toLocalBufferType(this: void, buffer: Buffer | Uint8Array): Buffer {\n    return Buffer.isBuffer(buffer)\n      ? buffer\n      : Buffer.from(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  },\n\n  equals(this: void, seqA: Uint8Array, seqB: Uint8Array) {\n    return ByteUtils.toLocalBufferType(seqA).equals(seqB);\n  },\n\n  compare(this: void, seqA: Uint8Array, seqB: Uint8Array) {\n    return ByteUtils.toLocalBufferType(seqA).compare(seqB);\n  },\n\n  toBase64(this: void, uint8array: Uint8Array) {\n    return ByteUtils.toLocalBufferType(uint8array).toString('base64');\n  }\n};\n\n/**\n * Returns true if value is a Uint8Array or a Buffer\n * @param value - any value that may be a Uint8Array\n */\nexport function isUint8Array(value: unknown): value is Uint8Array {\n  return (\n    value != null &&\n    typeof value === 'object' &&\n    Symbol.toStringTag in value &&\n    value[Symbol.toStringTag] === 'Uint8Array'\n  );\n}\n\n/**\n * Determines if a connection's address matches a user provided list\n * of domain wildcards.\n */\nexport function hostMatchesWildcards(host: string, wildcards: string[]): boolean {\n  for (const wildcard of wildcards) {\n    if (\n      host === wildcard ||\n      (wildcard.startsWith('*.') && host?.endsWith(wildcard.substring(2, wildcard.length))) ||\n      (wildcard.startsWith('*/') && host?.endsWith(wildcard.substring(2, wildcard.length)))\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Ensure Hint field is in a shape we expect:\n * - object of index names mapping to 1 or -1\n * - just an index name\n * @internal\n */\n// Add a type definition for Hint\ntype Hint = string | Record<string, 1 | -1> | string[];\n\nfunction normalizeHintField(hint?: Hint): Hint | undefined {\n  let finalHint: string | Record<string, 1 | -1> | undefined = undefined;\n\n  if (typeof hint === 'string') {\n    finalHint = hint;\n  } else if (Array.isArray(hint)) {\n    finalHint = {};\n    (hint as string[]).forEach(param => {\n      (finalHint as Record<string, 1 | -1>)[param] = 1;\n    });\n  } else if (hint != null && typeof hint === 'object') {\n    finalHint = {};\n    for (const name in hint) {\n      (finalHint as Record<string, 1 | -1>)[name] = (hint as Record<string, 1 | -1>)[name];\n    }\n  }\n\n  return finalHint;\n}\n\nconst TO_STRING = (object: unknown) => Object.prototype.toString.call(object);\n/**\n * Checks if arg is an Object:\n * - **NOTE**: the check is based on the `[Symbol.toStringTag]() === 'Object'`\n * @internal\n */\n\nexport function isObject(arg: unknown): arg is object {\n  return '[object Object]' === TO_STRING(arg);\n}\n\n/** @internal */\nexport function mergeOptions<T, S>(target: T, source: S): T & S {\n  return { ...target, ...source };\n}\n\n/** @internal */\nexport function filterOptions(options: AnyOptions, names: ReadonlyArray<string>): AnyOptions {\n  const filterOptions: AnyOptions = {};\n\n  for (const name in options) {\n    if (names.includes(name)) {\n      filterOptions[name] = options[name];\n    }\n  }\n\n  // Filtered options\n  return filterOptions;\n}\n\ninterface HasRetryableWrites {\n  retryWrites?: boolean;\n}\n/**\n * Applies retryWrites: true to a command if retryWrites is set on the command's database.\n * @internal\n *\n * @param target - The target command to which we will apply retryWrites.\n * @param db - The database from which we can inherit a retryWrites value.\n */\nexport function applyRetryableWrites<T extends HasRetryableWrites>(target: T, db?: Db): T {\n  if (db && db.s.options?.retryWrites) {\n    target.retryWrites = true;\n  }\n\n  return target;\n}\n\n/**\n * Applies a write concern to a command based on well defined inheritance rules, optionally\n * detecting support for the write concern in the first place.\n * @internal\n *\n * @param target - the target command we will be applying the write concern to\n * @param sources - sources where we can inherit default write concerns from\n * @param options - optional settings passed into a command for write concern overrides\n */\n\n/**\n * Checks if a given value is a Promise\n *\n * @typeParam T - The resolution type of the possible promise\n * @param value - An object that could be a promise\n * @returns true if the provided value is a Promise\n */\nexport function isPromiseLike<T = unknown>(value?: unknown): value is PromiseLike<T> {\n  return (\n    value != null &&\n    typeof value === 'object' &&\n    'then' in value &&\n    typeof value.then === 'function'\n  );\n}\n\n/**\n * Applies collation to a given command.\n * @internal\n *\n * @param command - the command on which to apply collation\n * @param target - target of command\n * @param options - options containing collation settings\n */\nexport function decorateWithCollation(\n  command: Document,\n  target: MongoClient | Db | Collection,\n  options: AnyOptions\n): void {\n  interface CollationCapabilities {\n    commandsTakeCollation?: boolean;\n  }\n  const topology = getTopology(target);\n  const capabilities = (topology as CollationCapabilities).commandsTakeCollation !== undefined\n    ? (topology as CollationCapabilities)\n    : { commandsTakeCollation: false };\n  if (options.collation && typeof options.collation === 'object') {\n    if (capabilities && capabilities.commandsTakeCollation) {\n      command.collation = options.collation;\n    } else {\n      throw new MongoCompatibilityError(`Current topology does not support collation`);\n    }\n  }\n}\n\n/**\n * Applies a read concern to a given command.\n * @internal\n *\n * @param command - the command on which to apply the read concern\n * @param coll - the parent collection of the operation calling this method\n */\nexport function decorateWithReadConcern(\n  command: Document,\n  coll: { s: { readConcern?: ReadConcern } },\n  options?: OperationOptions\n): void {\n  if (options && options.session && options.session.inTransaction()) {\n    return;\n  }\n  const readConcern = Object.assign({}, command.readConcern || {});\n  if (coll.s.readConcern) {\n    Object.assign(readConcern, coll.s.readConcern);\n  }\n\n  if (Object.keys(readConcern).length > 0) {\n    Object.assign(command, { readConcern: readConcern });\n  }\n}\n\n/**\n * @internal\n */\nexport type TopologyProvider =\n  | MongoClient\n  | ClientSession\n  | FindCursor\n  | AbstractCursor\n  | Collection<unknown>\n  | Db;\n\n/**\n * A helper function to get the topology from a given provider. Throws\n * if the topology cannot be found.\n * @throws MongoNotConnectedError\n * @internal\n */\nexport function getTopology(provider: TopologyProvider): Topology {\n  // MongoClient or ClientSession or AbstractCursor\n  if ('topology' in provider && provider.topology) {\n    return provider.topology;\n  } else if ('client' in provider && provider.client && provider.client.topology) {\n    return provider.client.topology;\n  }\n\n  throw new MongoNotConnectedError('MongoClient must be connected to perform this operation');\n}\n\n/** @internal */\nexport function ns(ns: string): MongoDBNamespace {\n  return MongoDBNamespace.fromString(ns);\n}\n\n/** @public */\nexport class MongoDBNamespace {\n  /**\n   * Create a namespace object\n   *\n   * @param db - database name\n   * @param collection - collection name\n   */\n  constructor(\n    public db: string,\n    public collection?: string\n  ) {\n    this.collection = collection === '' ? undefined : collection;\n  }\n\n  toString(): string {\n    return this.collection ? `${this.db}.${this.collection}` : this.db;\n  }\n\n  withCollection(collection: string): MongoDBCollectionNamespace {\n    return new MongoDBCollectionNamespace(this.db, collection);\n  }\n\n  static fromString(namespace?: string): MongoDBNamespace {\n    if (typeof namespace !== 'string' || namespace === '') {\n      // TODO(NODE-3483): Replace with MongoNamespaceError\n      throw new MongoRuntimeError(`Cannot parse namespace from \"${namespace}\"`);\n    }\n\n    const [db, ...collectionParts] = namespace.split('.');\n    const collection = collectionParts.join('.');\n    return new MongoDBNamespace(db, collection === '' ? undefined : collection);\n  }\n}\n\n/**\n * @public\n *\n * A class representing a collection's namespace.  This class enforces (through Typescript) that\n * the `collection` portion of the namespace is defined and should only be\n * used in scenarios where this can be guaranteed.\n */\nexport class MongoDBCollectionNamespace extends MongoDBNamespace {\n  constructor(\n    db: string,\n    override collection: string\n  ) {\n    super(db, collection);\n  }\n\n  static override fromString(namespace?: string): MongoDBCollectionNamespace {\n    return super.fromString(namespace) as MongoDBCollectionNamespace;\n  }\n}\n\n/** @internal */\nexport function* makeCounter(seed = 0): Generator<number> {\n  let count = seed;\n  while (true) {\n    const newCount = count;\n    count += 1;\n    yield newCount;\n  }\n}\n\n/**\n * Synchronously Generate a UUIDv4\n * @internal\n */\nexport function uuidV4(): Buffer {\n  const result = crypto.randomBytes(16);\n  result[6] = (result[6] & 0x0f) | 0x40;\n  result[8] = (result[8] & 0x3f) | 0x80;\n  return result;\n}\n\n/**\n * A helper function for determining `maxWireVersion` between legacy and new topology instances\n * @internal\n */\n\n/**\n * Checks if the document is a Hello request\n * @internal\n */\nexport function isHello(doc: Document): boolean {\n  return doc[LEGACY_HELLO_COMMAND] || doc.hello ? true : false;\n}\n\n/** Returns the items that are uniquely in setA */\nexport function setDifference<T>(setA: Iterable<T>, setB: Iterable<T>): Set<T> {\n  const difference = new Set<T>(setA);\n  for (const elem of setB) {\n    difference.delete(elem);\n  }\n  return difference;\n}\n\nconst HAS_OWN = (object: unknown, prop: string) =>\n  Object.prototype.hasOwnProperty.call(object, prop);\n\nexport function isRecord<T extends readonly string[]>(\n// ...existing code...\n\ntype ListNode<T> = {\n  value: T;\n  next: ListNode<T> | HeadNode<T>;\n  prev: ListNode<T> | HeadNode<T>;\n};\n\ntype HeadNode<T> = {\n  value: null;\n  next: ListNode<T>;\n  prev: ListNode<T>;\n};\n\n/**\n * When a list is empty the head is a reference with pointers to itself\n * So this type represents that self referential state\n */\ntype EmptyNode = {\n  value: null;\n  next: EmptyNode;\n  prev: EmptyNode;\n};\n\n/**\n * A sequential list of items in a circularly linked list\n * @remarks\n * The head node is special, it is always defined and has a value of null.\n * It is never \"included\" in the list, in that, it is not returned by pop/shift or yielded by the iterator.\n * The circular linkage and always defined head node are to reduce checks for null next/prev references to zero.\n * New nodes are declared as object literals with keys always in the same order: next, prev, value.\n * @internal\n */\nexport class List<T = unknown> {\n  private readonly head: HeadNode<T> | EmptyNode;\n  private count: number;\n\n  get length() {\n    return this.count;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'List' as const;\n  }\n\n  constructor() {\n    this.count = 0;\n\n    // this is carefully crafted:\n    // declaring a complete and consistently key ordered\n    // object is beneficial to the runtime optimizations\n    this.head = {\n      next: null,\n      prev: null,\n      value: null\n    } as unknown as EmptyNode;\n    this.head.next = this.head;\n    this.head.prev = this.head;\n  }\n\n  toArray() {\n    return Array.from(this);\n  }\n\n  toString() {\n    return `head <=> ${this.toArray().join(' <=> ')} <=> head`;\n  }\n\n  *[Symbol.iterator](): Generator<T, void, void> {\n    for (const node of this.nodes()) {\n      yield node.value;\n    }\n  }\n\n  private *nodes(): Generator<ListNode<T>, void, void> {\n    let ptr: HeadNode<T> | ListNode<T> | EmptyNode = this.head.next;\n    while (ptr !== this.head) {\n      // Save next before yielding so that we make removing within iteration safe\n      const { next } = ptr as ListNode<T>;\n      yield ptr as ListNode<T>;\n      ptr = next;\n    }\n  }\n\n  /** Insert at end of list */\n  push(value: T) {\n    this.count += 1;\n    const newNode: ListNode<T> = {\n      next: this.head as HeadNode<T>,\n      prev: this.head.prev as ListNode<T>,\n      value\n    };\n    this.head.prev.next = newNode;\n    this.head.prev = newNode;\n  }\n\n  /** Inserts every item inside an iterable instead of the iterable itself */\n  pushMany(iterable: Iterable<T>) {\n    for (const value of iterable) {\n      this.push(value);\n    }\n  }\n\n  /** Insert at front of list */\n  unshift(value: T) {\n    this.count += 1;\n    const newNode: ListNode<T> = {\n      next: this.head.next as ListNode<T>,\n      prev: this.head as HeadNode<T>,\n      value\n    };\n    this.head.next.prev = newNode;\n    this.head.next = newNode;\n  }\n\n  private remove(node: ListNode<T> | EmptyNode): T | null {\n    if (node === this.head || this.length === 0) {\n      return null;\n    }\n\n    this.count -= 1;\n\n    const prevNode = node.prev;\n    const nextNode = node.next;\n    prevNode.next = nextNode;\n    nextNode.prev = prevNode;\n\n    return node.value;\n  }\n\n  /** Removes the first node at the front of the list */\n  shift(): T | null {\n    return this.remove(this.head.next);\n  }\n\n  /** Removes the last node at the end of the list */\n  pop(): T | null {\n    return this.remove(this.head.prev);\n  }\n\n  /** Iterates through the list and removes nodes where filter returns true */\n  prune(filter: (value: T) => boolean) {\n    for (const node of this.nodes()) {\n      if (filter(node.value)) {\n        this.remove(node);\n      }\n    }\n  }\n\n  clear() {\n    this.count = 0;\n    this.head.next = this.head as EmptyNode;\n    this.head.prev = this.head as EmptyNode;\n  }\n\n  /** Returns the first item in the list, does not remove */\n  first(): T | null {\n    // If the list is empty, value will be the head's null\n    return this.head.next.value;\n  }\n\n  /** Returns the last item in the list, does not remove */\n  last(): T | null {\n    // If the list is empty, value will be the head's null\n    return this.head.prev.value;\n  }\n}\n\n/**\n * A pool of Buffers which allow you to read them as if they were one\n * @internal\n */\nexport class BufferPool {\n  private buffers: List<Buffer>;\n  private totalByteLength: number;\n\n  constructor() {\n    this.buffers = new List();\n    this.totalByteLength = 0;\n  }\n\n  get length(): number {\n    return this.totalByteLength;\n  }\n\n  /** Adds a buffer to the internal buffer pool list */\n  append(buffer: Buffer): void {\n    this.buffers.push(buffer);\n    this.totalByteLength += buffer.length;\n  }\n\n  /**\n   * If BufferPool contains 4 bytes or more construct an int32 from the leading bytes,\n   * otherwise return null. Size can be negative, caller should error check.\n   */\n  getInt32(): number | null {\n    if (this.totalByteLength < 4) {\n      return null;\n    }\n    const firstBuffer = this.buffers.first();\n    if (firstBuffer != null && firstBuffer.byteLength >= 4) {\n      return firstBuffer.readInt32LE(0);\n    }\n\n    // Unlikely case: an int32 is split across buffers.\n    // Use read and put the returned buffer back on top\n    const top4Bytes = this.read(4);\n    const value = top4Bytes.readInt32LE(0);\n\n    // Put it back.\n    this.totalByteLength += 4;\n    this.buffers.unshift(top4Bytes);\n\n    return value;\n  }\n\n  /** Reads the requested number of bytes, optionally consuming them */\n  read(size: number): Buffer {\n    if (typeof size !== 'number' || size < 0) {\n      throw new MongoInvalidArgumentError('Argument \"size\" must be a non-negative number');\n    }\n\n    // oversized request returns empty buffer\n    if (size > this.totalByteLength) {\n      return Buffer.alloc(0);\n    }\n\n    // We know we have enough, we just don't know how it is spread across chunks\n    // TODO(NODE-4732): alloc API should change based on raw option\n    const result = Buffer.allocUnsafe(size);\n\n    for (let bytesRead = 0; bytesRead < size; ) {\n      const buffer = this.buffers.shift();\n      if (buffer == null) {\n        break;\n      }\n      const bytesRemaining = size - bytesRead;\n      const bytesReadable = Math.min(bytesRemaining, buffer.byteLength);\n      const bytes = buffer.subarray(0, bytesReadable);\n\n      result.set(bytes, bytesRead);\n\n      bytesRead += bytesReadable;\n      this.totalByteLength -= bytesReadable;\n      if (bytesReadable < buffer.byteLength) {\n        this.buffers.unshift(buffer.subarray(bytesReadable));\n      }\n    }\n\n    return result;\n  }\n}\n\n/** @public */\nexport class HostAddress {\n  host: string | undefined = undefined;\n  port: number | undefined = undefined;\n  socketPath: string | undefined = undefined;\n  isIPv6 = false;\n\n  constructor(hostString: string) {\n    const escapedHost = hostString.split(' ').join('%20'); // escape spaces, for socket path hosts\n\n    if (escapedHost.endsWith('.sock')) {\n      // heuristically determine if we're working with a domain socket\n      this.socketPath = decodeURIComponent(escapedHost);\n      return;\n    }\n\n    const urlString = `iLoveJS://${escapedHost}`;\n    let url;\n    try {\n      url = new URL(urlString);\n    } catch (urlError) {\n      const runtimeError = new MongoRuntimeError(`Unable to parse ${escapedHost} with URL`);\n      runtimeError.cause = urlError;\n      throw runtimeError;\n    }\n\n    const hostname = url.hostname;\n    const port = url.port;\n\n    let normalized = decodeURIComponent(hostname).toLowerCase();\n    if (normalized.startsWith('[') && normalized.endsWith(']')) {\n      this.isIPv6 = true;\n      normalized = normalized.substring(1, hostname.length - 1);\n    }\n\n    this.host = normalized.toLowerCase();\n\n    if (typeof port === 'number') {\n      this.port = port;\n    } else if (typeof port === 'string' && port !== '') {\n      this.port = Number.parseInt(port, 10);\n    } else {\n      this.port = 27017;\n    }\n\n    if (this.port === 0) {\n      throw new MongoParseError('Invalid port (zero) with hostname');\n    }\n    Object.freeze(this);\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    return `new HostAddress('${this.toString()}')`;\n  }\n\n  toString(): string {\n    if (typeof this.host === 'string') {\n      if (this.isIPv6) {\n        return `[${this.host}]:${this.port}`;\n      }\n      return `${this.host}:${this.port}`;\n    }\n    return `${this.socketPath}`;\n  }\n\n  static fromString(this: void, s: string): HostAddress {\n    return new HostAddress(s);\n  }\n\n  static fromHostPort(host: string, port: number): HostAddress {\n    if (host.includes(':')) {\n      host = `[${host}]`; // IPv6 address\n    }\n    return HostAddress.fromString(`${host}:${port}`);\n  }\n\n  static fromSrvRecord({ name, port }: SrvRecord): HostAddress {\n    return HostAddress.fromHostPort(name, port);\n  }\n\n  toHostPort(): { host: string; port: number } {\n    if (this.socketPath) {\n      return { host: this.socketPath, port: 0 };\n    }\n\n    const host = this.host ?? '';\n    const port = this.port ?? 0;\n    return { host, port };\n  }\n}\n\nexport const DEFAULT_PK_FACTORY = {\n  // We prefer not to rely on ObjectId having a createPk method\n  createPk(): ObjectId {\n    return new ObjectId();\n  }\n};\n\n/**\n * When the driver used emitWarning the code will be equal to this.\n * @public\n *\n * @example\n * ```ts\n * process.on('warning', (warning) => {\n *  if (warning.code === MONGODB_WARNING_CODE) console.error('Ah an important warning! :)')\n * })\n * ```\n */\n// ...existing code...\n\n/**\n * Takes a JS object and joins the values into a string separated by ', '\n */\nexport function enumToString(en: Record<string, unknown>): string {\n  return Object.values(en).join(', ');\n}\n\n/**\n * Determine if a server supports retryable writes.\n *\n * @internal\n */\nexport function supportsRetryableWrites(server?: Server): boolean {\n  if (!server) {\n    return false;\n  }\n\n  if (server.loadBalanced) {\n    // Loadbalanced topologies will always support retry writes\n    return true;\n  }\n\n  if (server.description && server.description.logicalSessionTimeoutMinutes != null) {\n    // that supports sessions\n    if (server.description.type !== ServerType.Standalone) {\n      // and that is not a standalone\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Fisher–Yates Shuffle\n *\n * Reference: https://bost.ocks.org/mike/shuffle/\n * @param sequence - items to be shuffled\n * @param limit - Defaults to `0`. If nonzero shuffle will slice the randomized array e.g, `.slice(0, limit)` otherwise will return the entire randomized array.\n */\nexport function shuffle<T>(sequence: Iterable<T>, limit = 0): Array<T> {\n  const items = Array.from(sequence); // shallow copy in order to never shuffle the input\n\n  if (limit > items.length) {\n    throw new MongoRuntimeError('Limit must be less than the number of items');\n  }\n\n  let remainingItemsToShuffle = items.length;\n  const lowerBound = limit % items.length === 0 ? 1 : items.length - limit;\n  while (remainingItemsToShuffle > lowerBound) {\n    // Pick a remaining element\n    const randomIndex = Math.floor(Math.random() * remainingItemsToShuffle);\n    remainingItemsToShuffle -= 1;\n\n    // And swap it with the current element\n    const swapHold = items[remainingItemsToShuffle];\n    items[remainingItemsToShuffle] = items[randomIndex];\n    items[randomIndex] = swapHold;\n  }\n\n  return limit % items.length === 0 ? items : items.slice(lowerBound);\n}\n\n/**\n * TODO(NODE-4936): read concern eligibility for commands should be codified in command construction\n * @internal\n * @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.md#read-concern\n */\nexport function commandSupportsReadConcern(command: Document): boolean {\n  if (command.aggregate || command.count || command.distinct || command.find || command.geoNear) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Compare objectIds. `null` is always less\n * - `+1 = oid1 is greater than oid2`\n * - `-1 = oid1 is less than oid2`\n * - `+0 = oid1 is equal oid2`\n */\nexport function compareObjectId(oid1?: ObjectId | null, oid2?: ObjectId | null): 0 | 1 | -1 {\n  if (oid1 == null && oid2 == null) {\n    return 0;\n  }\n\n  if (oid1 == null) {\n    return -1;\n  }\n\n  if (oid2 == null) {\n    return 1;\n  }\n\n  return ByteUtils.compare(oid1.id, oid2.id);\n}\n\nexport function parseInteger(value: unknown): number | null {\n  if (typeof value === 'number') return Math.trunc(value);\n  const parsedValue = Number.parseInt(String(value), 10);\n\n  return Number.isNaN(parsedValue) ? null : parsedValue;\n}\n\nexport function parseUnsignedInteger(value: unknown): number | null {\n  const parsedInt = parseInteger(value);\n\n  return parsedInt != null && parsedInt >= 0 ? parsedInt : null;\n}\n\n/**\n * This function throws a MongoAPIError in the event that either of the following is true:\n * * If the provided address domain does not match the provided parent domain\n * * If the parent domain contains less than three `.` separated parts and the provided address does not contain at least one more domain level than its parent\n *\n * If a DNS server were to become compromised SRV records would still need to\n * advertise addresses that are under the same domain as the srvHost.\n *\n * @param address - The address to check against a domain\n * @param srvHost - The domain to check the provided address against\n * @returns void\n */\nexport function checkParentDomainMatch(address: string, srvHost: string): void {\n  // Remove trailing dot if exists on either the resolved address or the srv hostname\n  const normalizedAddress = address.endsWith('.') ? address.slice(0, address.length - 1) : address;\n  const normalizedSrvHost = srvHost.endsWith('.') ? srvHost.slice(0, srvHost.length - 1) : srvHost;\n\n  const allCharacterBeforeFirstDot = /^.*?\\./;\n  const srvIsLessThanThreeParts = normalizedSrvHost.split('.').length < 3;\n  // Remove all characters before first dot\n  // Add leading dot back to string so\n  //   an srvHostDomain = '.trusted.site'\n  //   will not satisfy an addressDomain that endsWith '.fake-trusted.site'\n  const addressDomain = `.${normalizedAddress.replace(allCharacterBeforeFirstDot, '')}`;\n  let srvHostDomain = srvIsLessThanThreeParts\n    ? normalizedSrvHost\n    : `.${normalizedSrvHost.replace(allCharacterBeforeFirstDot, '')}`;\n\n  if (!srvHostDomain.startsWith('.')) {\n    srvHostDomain = '.' + srvHostDomain;\n  }\n  if (\n    srvIsLessThanThreeParts &&\n    normalizedAddress.split('.').length <= normalizedSrvHost.split('.').length\n  ) {\n    throw new MongoAPIError(\n      'Server record does not have at least one more domain level than parent URI'\n    );\n  }\n  if (!addressDomain.endsWith(srvHostDomain)) {\n    throw new MongoAPIError('Server record does not share hostname with parent URI');\n  }\n}\n\ninterface RequestOptions {\n  json?: boolean;\n  method?: string;\n  timeout?: number;\n  headers?: http.OutgoingHttpHeaders;\n}\n\n/**\n * Perform a get request that returns status and body.\n * @internal\n */\nexport function isRecord(\n  value: unknown,\n  requiredKeys?: readonly string[]\n): value is Record<string, unknown> {\n  if (!isObject(value)) {\n    return false;\n  }\n  if (requiredKeys) {\n    const keys = Object.keys(value as Record<string, unknown>);\n    return isSuperset(keys, requiredKeys as string[]);\n  }\n  return true;\n}\n    timeoutId = setTimeout(() => {\n      request.destroy(new MongoNetworkTimeoutError(`request timed out after 10 seconds`));\n    }, 10000);\n  });\n}\n\nexport async function request(uri: string): Promise<Record<string, unknown>>;\n// ...existing code...\n\n/** @internal */\nexport const DOCUMENT_DB_CHECK = /(\\.docdb\\.amazonaws\\.com$)|(\\.docdb-elastic\\.amazonaws\\.com$)/;\n/** @internal */\nexport const COSMOS_DB_CHECK = /\\.cosmos\\.azure\\.com$/;\n\n/** @internal */\nexport const DOCUMENT_DB_MSG =\n  'You appear to be connected to a DocumentDB cluster. For more information regarding feature compatibility and support please visit https://www.mongodb.com/supportability/documentdb';\n/** @internal */\nexport const COSMOS_DB_MSG =\n  'You appear to be connected to a CosmosDB cluster. For more information regarding feature compatibility and support please visit https://www.mongodb.com/supportability/cosmosdb';\n\n/** @internal */\nexport function isHostMatch(match: RegExp, host?: string): boolean {\n  return host && match.test(host.toLowerCase()) ? true : false;\n}\n\nexport function promiseWithResolvers<T>(): {\n  promise: Promise<T>;\n  resolve: (value: T) => void;\n  reject: (error: Error) => void;\n} {\n  let resolve!: (value: T) => void;\n  let reject!: (error: Error) => void;\n  const promise = new Promise<T>(function withResolversExecutor(promiseResolve, promiseReject) {\n    resolve = promiseResolve;\n    reject = promiseReject;\n  });\n  return { promise, resolve, reject } as const;\n}\n\n/**\n * A noop function intended for use in preventing unhandled rejections.\n *\n * @example\n * ```js\n * const promise = myAsyncTask();\n * // eslint-disable-next-line github/no-then\n * promise.then(undefined, squashError);\n * ```\n */\nexport function squashError(_error: unknown) {\n  return;\n}\n\nexport const randomBytes = promisify(crypto.randomBytes);\n\n/**\n * Replicates the events.once helper.\n *\n * Removes unused signal logic and It **only** supports 0 or 1 argument events.\n *\n * @param ee - An event emitter that may emit `ev`\n * @param name - An event name to wait for\n */\nexport async function once<T>(ee: EventEmitter, name: string, options?: Abortable): Promise<T> {\n  options?.signal?.throwIfAborted();\n\n  const { promise, resolve, reject } = promiseWithResolvers<T>();\n  const onEvent = (data: T) => resolve(data);\n  const onError = (error: Error) => reject(error);\n  const abortListener = addAbortListener(options?.signal, function () {\n    reject(this.reason);\n  });\n\n  ee.once(name, onEvent).once('error', onError);\n\n  try {\n    return await promise;\n  } finally {\n    ee.off(name, onEvent);\n    ee.off('error', onError);\n    abortListener?.[kDispose]();\n  }\n}\n\nexport function maybeAddIdToDocuments(\n  coll: Collection,\n  docs: Document[],\n  options: { forceServerObjectId?: boolean }\n): Document[];\nexport function maybeAddIdToDocuments(\n  coll: Collection,\n  docs: Document,\n  options: { forceServerObjectId?: boolean }\n): Document;\nexport function maybeAddIdToDocuments(\n  coll: Collection,\n  docOrDocs: Document[] | Document,\n  options: { forceServerObjectId?: boolean }\n): Document[] | Document {\n  const forceServerObjectId =\n    typeof options.forceServerObjectId === 'boolean'\n      ? options.forceServerObjectId\n      : (coll.s.db.options && 'forceServerObjectId' in coll.s.db.options ? (coll.s.db.options as { forceServerObjectId?: boolean }).forceServerObjectId : undefined);\n\n  // no need to modify the docs if server sets the ObjectId\n  if (forceServerObjectId === true) {\n    return docOrDocs;\n  }\n\n  const transform = (doc: Document): Document => {\n    if (doc._id == null) {\n      doc._id = coll.s.pkFactory.createPk();\n    }\n\n    return doc;\n  };\n  return Array.isArray(docOrDocs) ? docOrDocs.map(transform) : transform(docOrDocs);\n}\n\n\nexport function csotMin(duration1: number, duration2: number): number {\n  if (duration1 === 0) return duration2;\n  if (duration2 === 0) return duration1;\n  return Math.min(duration1, duration2);\n}\n\nexport function noop() {\n  return;\n}\n\n/**\n * Recurse through the (identically-shaped) `decrypted` and `original`\n * objects and attach a `decryptedKeys` property on each sub-object that\n * contained encrypted fields. Because we only call this on BSON responses,\n * we do not need to worry about circular references.\n *\n * @internal\n */\nexport function decorateDecryptionResult(\n  decrypted: Document & { [kDecoratedKeys]?: Array<string> },\n  original: Document,\n  isTopLevelDecorateCall = true\n): void {\n  if (isTopLevelDecorateCall) {\n    // The original value could have been either a JS object or a BSON buffer\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(original)) {\n      // Do not mutate original in place; use a local variable\n      const deserialized = deserialize(original as Buffer);\n      return decorateDecryptionResult(decrypted, deserialized, false);\n    }\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(decrypted)) {\n      throw new MongoRuntimeError('Expected result of decryption to be deserialized BSON object');\n    }\n  }\n\n  if (!decrypted || typeof decrypted !== 'object' || decrypted === null) return;\n  for (const k of Object.keys(decrypted)) {\n    const originalValue = original[k];\n\n    // An object was decrypted by libmongocrypt if and only if it was\n    // a BSON Binary object with subtype 6.\n    if (\n      originalValue &&\n      typeof originalValue === 'object' &&\n      originalValue !== null &&\n      '_bsontype' in originalValue &&\n      (originalValue as { _bsontype: string })._bsontype === 'Binary' &&\n      'sub_type' in originalValue &&\n      (originalValue as { sub_type: number }).sub_type === 6\n    ) {\n      if (!decrypted[kDecoratedKeys]) {\n        Object.defineProperty(decrypted, kDecoratedKeys, {\n          value: [],\n          configurable: true,\n          enumerable: false,\n          writable: false\n        });\n      }\n      decrypted[kDecoratedKeys]!.push(k);\n      continue;\n    }\n\n    // Recursive call with robust type guard and cast\n    if (\n      decrypted[k] &&\n      typeof decrypted[k] === 'object' &&\n      decrypted[k] !== null &&\n      originalValue &&\n      typeof originalValue === 'object' &&\n      originalValue !== null\n    ) {\n      decorateDecryptionResult(\n        decrypted[k] as Document & { [kDecoratedKeys]?: Array<string> },\n        originalValue as Document,\n        false\n      );\n    }\n  }\n}\n\n/** @internal */\nexport const kDispose: symbol = typeof Symbol.dispose === 'symbol'\n  ? Symbol.dispose\n  : Symbol('dispose');\n\n/** @internal */\nexport interface Disposable {\n  [kDispose](): void;\n}\n\n/**\n * A utility that helps with writing listener code idiomatically\n *\n * @example\n * ```js\n * using listener = addAbortListener(signal, function () {\n *   console.log('aborted', this.reason);\n * });\n * ```\n *\n * @param signal - if exists adds an abort listener\n * @param listener - the listener to be added to signal\n * @returns A disposable that will remove the abort listener\n */\nexport function addAbortListener(\n  signal: AbortSignal | undefined | null,\n  listener: (this: AbortSignal, event: Event) => void\n): Disposable | undefined {\n  if (signal == null) return;\n  signal.addEventListener('abort', listener, { once: true });\n  return { [kDispose]: () => signal.removeEventListener('abort', listener) };\n}\n\n/**\n * Takes a promise and races it with a promise wrapping the abort event of the optionally provided signal.\n * The given promise is _always_ ordered before the signal's abort promise.\n * When given an already rejected promise and an already aborted signal, the promise's rejection takes precedence.\n *\n * Any asynchronous processing in `promise` will continue even after the abort signal has fired,\n * but control will be returned to the caller\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race\n *\n * @param promise - A promise to discard if the signal aborts\n * @param options - An options object carrying an optional signal\n */\nexport async function abortable<T>(\n  promise: Promise<T>,\n  { signal }: { signal?: AbortSignal }\n): Promise<T> {\n  if (signal == null) {\n    return await promise;\n  }\n\n  const { promise: aborted, reject } = promiseWithResolvers<never>();\n\n  const abortListener = signal.aborted\n    ? reject(signal.reason)\n    : addAbortListener(signal, function () {\n        reject(this.reason);\n      });\n\n  try {\n    return await Promise.race([promise, aborted]);\n  } finally {\n    abortListener?.[kDispose]();\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/lib/websocket.ts","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'update' is defined but never used.","line":11,"column":31,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":50,"suggestions":[{"messageId":"removeVar","data":{"varName":"update"},"fix":{"range":[213,232],"text":""},"desc":"Remove unused variable 'update'."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/lib/websocket.ts\n// Simple WebSocket client for Supabase Realtime (demo)\n\nexport type UpdateEvent = {\n  id: string;\n  type: string;\n  message: string;\n  timestamp: number;\n};\n\nexport type UpdateCallback = (update: UpdateEvent) => void;\n\nexport class WebSocketClient {\n  private ws: WebSocket | null = null;\n  private listeners: UpdateCallback[] = [];\n\n  connect(url: string) {\n    this.ws = new WebSocket(url);\n    this.ws.onmessage = (e) => {\n      try {\n        const data = JSON.parse(e.data);\n        if (data && data.type && data.message) {\n          this.listeners.forEach((cb) => cb(data));\n        }\n      } catch { /* empty */ }\n    };\n  }\n\n  onUpdate(cb: UpdateCallback) {\n    this.listeners.push(cb);\n  }\n\n  disconnect() {\n    this.ws?.close();\n    this.ws = null;\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/setupTests.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/daniel/lionsofzion-website/src/utils/i18nMetadata.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]
